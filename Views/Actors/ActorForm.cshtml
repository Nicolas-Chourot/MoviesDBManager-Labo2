@model MoviesDBManager.Models.Actor
@{
    bool createMode = Model.Id == 0;
    string pageTitle = createMode ? "Ajout d'acteur" : "Modification d'acteur";
    var filmography = Model.MoviesToSeleclist();
    var allMovies = MoviesDBManager.Models.DB.Movies.ToSelectList();
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@pageTitle</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.Label("Nom", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CountryCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Helper.CountrySelector("CountryCode", Model.CountryCode)
                @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Avatar, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Helper.ImageUploader("Avatar", Model.Avatar, "Cliquez pour choisir une image")
                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (!createMode)
        {
            <div class="form-group">
                @Html.Label("Filmographie", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Helper.SelectionLists("SelectedMovies", filmography, allMovies, 8)
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Enregistrer" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Retour", "Index")
</div>
